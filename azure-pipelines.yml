trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
- group: haka-hybrid-variables
- name: version-full
  value: $(Major).$(Minor).$(Patch)

steps:
- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: 'restore'
    projects: $(project)

# - task: DotNetCoreCLI@2
#   displayName: 'dotnet build $(buildConfiguration)'
#   inputs:
#     command: 'build'
#     arguments: '--configuration $(buildConfiguration)'
#     projects: $(project)
    
# - task: NuGetCommand@2
#   inputs:
#     restoreSolution: $(project)

- task: MSBuild@1
  inputs:
    configuration: $(buildConfiguration)
    msbuildArguments: '-t:build'
    solution: '$(project)'

- task: MSBuild@1
  inputs:
    configuration: $(buildConfiguration)
    msbuildArguments: '-t:pack -p:Version=1.1.1 PackageOutputPath=$(Build.ArtifactStagingDirectory)/private'


# - task: MSBuild@1
#   inputs:
#     solution: '$(project)'
#     configuration: '$(buildConfiguration)'
#     restoreNugetPackages: true
    
# Pack private
- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: '$(project)'
    versioningScheme: 'byPrereleaseNumber'
    majorVersion: '$(Major)'
    minorVersion: '$(Minor)'
    patchVersion: '$(Patch)'
    packDestination: '$(Build.ArtifactStagingDirectory)/private'

# Pack public
- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: '$(project)'
    versioningScheme: 'byEnvVar'
    versionEnvVar: version-full
    packDestination: '$(Build.ArtifactStagingDirectory)/private'
    
# - task: DotNetCoreCLI@2
#   displayName: 'dotnet pack private'
#   inputs:
#     command: 'pack'
#     nobuild: true
#     packagesToPack: '$(project)'
#     versioningScheme: byPrereleaseNumber
#     majorVersion: '$(Major)'
#     minorVersion: '$(Minor)'
#     patchVersion: '$(Patch)'
#     packDirectory: '$(Build.ArtifactStagingDirectory)/private'

# - task: DotNetCoreCLI@2
#   displayName: 'dotnet pack public'
#   inputs:
#     command: 'pack'
#     nobuild: true
#     packagesToPack: '$(project)'
#     versioningScheme: byEnvVar
#     versionEnvVar: version-full
#     packDirectory: '$(Build.ArtifactStagingDirectory)/public'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(build.sourcesdirectory)'
    Contents: '**\bin\$(BuildConfiguration)\**\*.nupkg'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
